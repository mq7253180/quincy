安装：

安装openssl、pcre、zlib

安装openssl: 
	如果./config --prefix=时报
		LANGUAGE = (unset),
		LC_ALL = (unset),
	在~/.bashrc中末尾添加：export LC_ALL=C，后执行source ~/.bashrc

ln -s /quincy/programs/openssl-bin/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1
ln -s /quincy/programs/openssl-bin/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1

查看pcre是否安装: 
rpm -qa pcre
rpm -qa|grep pcre
下载地址：https://sourceforge.net/projects/pcre/files/pcre/

下载地址：https://nginx.org/en/download.html
Github：
	地址：https://github.com/nginx/nginx/
	checkout后configure在auto目录中，复制或剪切到根目录

./configure --prefix=/quincy/nginx --with-http_ssl_module --with-http_stub_status_module --with-stream --with-stream_ssl_preread_module --with-stream_ssl_module --with-openssl=/quincy/programs/openssl-1.1.1w --with-pcre=/quincy/programs/pcre-src --with-zlib=/quincy/programs/zlib-src

./configure --prefix=/quincy/nginx --with-http_ssl_module --with-http_stub_status_module --with-stream --with-stream_ssl_preread_module --with-stream_ssl_module --with-openssl=/quincy/programs/openssl-bin --with-pcre=/quincy/programs/pcre-bin --with-zlib=/quincy/programs/zlib-bin
make时报错：
make -f objs/Makefile
make[1]: Entering directory `/quincy/nginx-1.27.1'
cd /quincy/programs/pcre-bin \
&& if [ -f Makefile ]; then make distclean; fi \
&& CC="cc" CFLAGS="-O2 -fomit-frame-pointer -pipe " \
./configure --disable-shared 
/bin/sh: line 2: ./configure: No such file or directory
make[1]: *** [/quincy/programs/pcre-bin/Makefile] Error 127
make[1]: Leaving directory `/quincy/nginx-1.27.1'
make: *** [build] Error 2

报[error] invalid PID number: nginx -c <配置文件路径>
====================================================
四层：

stream {
    include    /quincy/nginx-conf/siceng/*.conf;
}
-----------------------------------------------------
upstream backend {
    server  104.20.22.46:443;
    server  104.20.22.46:443;
}

server {
    listen 443;         
    proxy_pass backend; 
}
====================================================
案例 location proxy_pass 结果
1  /foo/  http://192.168.1.48/  /api
2  /foo  http://192.168.1.48/  //api
3  /foo/  http://192.168.1.48  /foo/api
4  /foo  http://192.168.1.48  /foo/api

案例 location proxy_pass 结果
5  /foo/  http://192.168.1.48/bar/  /bar/api
6  /foo  http://192.168.1.48/bar/  /bar//api
7  /foo/  http://192.168.1.48/bar  /barapi
8  /foo  http://192.168.1.48/bar  /bar/api
=====================================================
proxy_buffer_size   1024k;
    proxy_buffers    16     1024k;
    proxy_busy_buffers_size     2048k;
    proxy_temp_file_write_size  2048k;

worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;
worker_rlimit_nofile 655340;
