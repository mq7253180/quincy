查看分区: fdisk -l
查看磁盘: df -lh
查看磁盘文件格式: df -T
查看单个文件或目录: du -sh
分区: fdisk /dev/vdb, n, p, 1, 两次回车, wq
格式化磁盘: mkfs.ext4 /dev/vdb1
查看内存: free -g
查看socket状态：
ipv4: cat /proc/net/sockstat
IPv6: cat /proc/net/sockstat6

逻辑CPU个数
cat /proc/cpuinfo|grep "processor"|wc -l

物理CPU个数：
cat /proc/cpuinfo|grep "physical id"|sort -u|wc -l

每个物理CPU中Core的个数：
cat /proc/cpuinfo|grep "cpu cores"|uniq|awk -F: '{print $2}'

查看core id的数量,即为所有物理CPU上的core的个数
cat /proc/cpuinfo|grep "core id"|uniq|wc -l

查看组: cat /etc/group
查看用户: cat /etc/passwd|cut -f 1 -d :
groupadd admin
useradd -r -m -d /usr/admin -g admin admin
passwd admin
将已有用户加入组: usermod -a -G <组名> <用户名>
ls -lrt
lsof -i:port: 查看被哪个进程占用

查看用户属于哪个组: groups 用户名
登录SFTP: sftp -P 9122 QUINCY@256.127.2.151
停止Reids: ./redis-4.0.11/src/redis-cli -p 6379 -a foobared shutdown
通过SSH指定私钥提交Git: ssh -i /d/docs/afcat_rsa git push

curl -X POST "" -H "Content-Type: application/json" -d ""
测试http连通性: curl -X GET {URL} -k --tlsv1.2 -v

vi跳至第n行: :n和nG是同一个效果
-------------------------------------------------------------------
sudo: 

vi /etc/sudoers

Cmnd_Alias ADMIN_SUDO_COMMANDS = /root/env/nginx/nginx-bin/sbin/nginx, /usr/local/bin/nginx
<用户名或%组名> ALL=(ALL) NOPASSWD: ADMIN_SUDO_COMMANDS
-------------------------------------------------------------------
不能解析域名:
 
vi /etc/sysconfig/network-scripts/ifcfg-eth1

在末尾添加两行: 
DNS1=114.114.114.114
DNS2=8.8.8.8

重启网卡
systemctl restart network
---------------------
压缩、解压缩

将压缩文件text.zip在当前目录下解压缩: 
unzip test.zip

将压缩文件text.zip在指定目录/tmp下解压缩，如果已有相同的文件存在，要求unzip命令不覆盖原先的文件: 
unzip -n test.zip -d /tmp

查看压缩文件目录，但不解压: 
unzip -v test.zip

将压缩文件test.zip在指定目录/tmp下解压缩，如果已有相同的文件存在，要求unzip命令覆盖原先的文件: 
unzip -o test.zip -d /tmp

压缩单个文件: 
zip package.zip file

压缩多个文件: 
zip package.zip file1 file2

压缩单个文件夹: 
zip -r package.zip folder

压缩多个文件夹: 
zip -r package.zip folder1 folder2

压缩文件、文件夹: 
zip -r package.zip file1 folder1 file2

压缩时加密码: 
zip -e package.zip file

解压tar.gz文件至指定目录
tar -zxvf /quincy/env/haproxy-2.1.3.tar.gz -C /quincy/env/

压缩为gz
tar -zcvf xxx.tar.gz 文件夹 文件

-z：有gzip属性的
-j：有bz2属性的
-------------------------------------------------------------------
GPG
生成: gpg --gen-key
列出所有密钥: gpg --list-key(s)
只列出私钥: gpg --list-secret-key(s)
导出公钥: gpg -a --export HCEHK > hcehk-dbs.asc
导出私钥: gpg -a --export-secret-key(s) HCEHK > hcehk-dbs-private.asc
导入密钥: gpg --import newkey
加密: gpg -o 输出密文location -c 待加密明文location
单个解密: gpg -o 输出明文location -d 密文location
批量解密: echo "hcehk8926"|sudo gpg --batch --passphrase-fd 0 -o ${1} -d ${2}
删除公钥: gpg --delete-key(s) newkey
删除私钥: gpg --delete-secret-key(s) newkey
-----------------------------------------------------------------
安装gcc: 
yum install -y gcc gcc-c++

安装rz、sz: 
yum install -y lrzsz

安装svn: 
装apr、apr-util、sqlite
装apr-util: --prefix=/export/env/apr-util-bin --with-apr=/export/env/apr-bin
装subversion: --prefix=/export/env/subversion-bin --with-apr-util=/export/env/apr-util-bin --with-apr=/export/env/apr-bin --with-sqlite=/export/env/sqlite-bin

安装git
yum -y install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker
make prefix=/quincy/env/git-bin all
make prefix=/quincy/env/git-bin install
ln -s /quincy/env/git-bin/bin/git /usr/local/bin/git

安装openssl: 
ln -s /quincy/env/openssl-bin/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1
ln -s /quincy/env/openssl-bin/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1

安装nginx: 
安装zlib、pcre、openssl
./configure --prefix=/quincy/env/nginx/nginx-bin --with-stream --with-openssl=/quincy/env/nginx/openssl-src --with-http_ssl_module --with-pcre=/quincy/env/nginx/pcre-src --with-zlib=/quincy/env/nginx/zlib-src --with-http_stub_status_module --with-stream --with-stream_ssl_preread_module --with-stream_ssl_module
报[error] invalid PID number: nginx -c <配置文件路径>

查看pcre是否安装: 
rpm -qa pcre
rpm -qa|grep pcre

安装haproxy: 
make TARGET=linux-glibc
make install PREFIX=/quincy/env/haproxy-bin
/quincy/env/haproxy/haproxy-bin/sbin/haproxy -f /quincy/env/haproxy/quincy.cfg -c
----------------------------------------------------------------
挂载远程目录
服务端
yum install rpcbind
yum install nfs-utils
会安装showmount、/etc/init.d/nfs、/sbin/mount.nfs
在/etc/exports中加入/export/test/src/eub-outer/src/main/webapp/resource 172.16.1.2(rw,no_root_squash)
service rpcbind start
service nfs start

客户端
yum install nfs-utils
mount -t nfs 172.16.1.25:/export/test/src/eub-outer/src/main/webapp/resource /export/remotedir/logistics/outer
----------------------------------------------------------------
证书登录

将id_rsa.pub内容复制到~/.ssh/authorized_keys
修改/etc/ssh/sshd_config: StrictModes no
重启ssh: systemctl restart sshd.service
----------------------------------------------------------------
定时任务: 
crontab -l
crontab -e
/var/spool/cron
----------------------------------------------------------------------
只保留22、80、443端口，其他端口全封
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 443 -j ACCEPT
iptables -A INPUT -p tcp --dport 3306 -j ACCEPT
iptables -P INPUT/OUTPUT/FORWARD ACCEPT/DROP

查看iptables: 
iptables -L -n
iptables -L --line-number

删除iptables: 
iptables -D INPUT 1

保存iptables: 
service iptables save

保留当前端口: 
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT 
iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-----------------------------------------------------------------
sed -n 'x,yp' filename
find filename|xargs grep ""

删除非空文件夹: find . -name "" -type d -exec rm -rf {} \;
查看oracle环境变量: env|grep oracle
---------------------------------
安装jdk注意事项

环境变量: 
JAVA_HOME=/quincy/env/jdk-9.0.4
PATH=$JAVA_HOME/bin:$PATH
CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar
export JAVA_HOME CLASSPATH PATH

报Unable to find Java: 
1. JAVA_HOME指向不存在的目录
2. ln -s /quincy/env/java/jdk-11.0.2/bin/java /sbin/java

cannot restore segment prot after reloc问题
关闭SELinux: 
临时: setenforce 0
永久: /etc/selinux/config和/etc/sysconfig/selinux，SELINUX=disabled
如果还是不行: 
chcon -t texrel_shlib_t /路径/路径/名字.so

查看SELinux状态：
/usr/sbin/sestatus -v或getenforce
---------------------------------------------
安装tomcat注意事项

关闭8080端口防火墙: 
修改Linux系统防火墙配置需要修改 /etc/sysconfig/iptables 这个文件，如果要开放哪个端口，在里面添加一条
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 1521 -j ACCEPT
就可以了，其中1521是要开放的端口号，然后重新启动linux的防火墙服务。

Linux下停止/启动防火墙服务的命令：service命令位于/sbin
service iptables stop
service iptables start
service iptables restart
要确保它在系统引导时启动，使用以下命令：/sbin/chkconfig --level 345 iptables on
ipchains服务不能和iptables服务同时运行。要确定ipchains服务被禁用，执行以下命令：/sbin/chkconfig --level 345 ipchains off
--------------------------------------------
设置Oracle字符集
export LANG=zh_CN.GBK
export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK

导出
exp userid=vsens/vsens buffer=65536 feedback=100000 file=/home/oracle/vsens.dmp owner=vsens direct=y log=/home/oracle/vsens.log
exp vsens/vsens file=vsens20111025.dmp owner=vsens full=y

导入
imp userid=vsens/vsens@orcl touser=vsens file=d:\a1.dmp
imp vsens/vsens file=20111025.dmp full=y

创建表空间
CREATE TABLESPACE proc_data DATAFILE 'D:/oracle/product/10.2.0/oradata/orcl/proc_data.dbf' SIZE 100m AUTOEXTEND ON;

创建用户
CREATE USER tibco IDENTIFIED BY tibco DEFAULT TABLESPACE proc_data;
给新建用户受权
GRANT CONNECT,RESOURCE,DBA,IMP_FULL_DATABASE TO tibco;

Oracle查看锁
SELECT session_id FROM v$locked_object;
SELECT sid,serial#,username,osuser FROM v$session WHERE sid=;
ALTER SYSTEM KILL SESSION '';

chown oracle.oinstall /oracle/dataexp/20111025.dmp
scp 20111025.dmp root@132.34.192.176:/oracle/dataexp
------------------------------------
RocketMQ: 
./bin/mqadmin help topicList
./bin/mqadmin topicList -n localhost:9876

查看topic路由信息: 
./bin/mqadmin topicRoute -n localhost:9876 -t CBSPAYI
./bin/mqadmin topicRoute -n localhost:9876 -t CBSPAYO

创建topic: 
./bin/mqadmin updateTopic -n localhost:9876 -c DefaultCluster -t HCE_CBSPAYI
./bin/mqadmin updateTopic -n localhost:9876 -b broker-a -t HCE_CBSPAYO

删除topic: 
./bin/mqadmin deleteTopic -n localhost:9876 -c DefaultCluster -t HCE_CBSPAYI
./bin/mqadmin deleteTopic -n localhost:9876 -c DefaultCluster -t HCE_CBSPAYO
--------------------------------------
安装gitlab: 

rpm -ivh /quincy/env/gitlab-ce-12.10.6-ce.0.el7.x86_64.rpm

配置: 
vi /etc/gitlab/gitlab.rb

external_url 'https://gitlab.maqiangcgq.com'

nginx['enable'] = false
redis['enable'] = false
unicorn['port'] = 8082
unicorn['worker_processes'] = 2

alertmanager['admin_email'] = 'mq7253180@126.com'

gitlab_rails['redis_host'] = "127.0.0.1"
gitlab_rails['redis_port'] = 6379
gitlab_rails['redis_password'] = "foobared"

gitlab_rails['gitlab_email_enabled'] = true
gitlab_rails['gitlab_email_from'] = 'mq7253181@126.com'
gitlab_rails['gitlab_email_display_name'] = 'Quincy's GitLab'
gitlab_rails['gitlab_email_reply_to'] = 'noreply@maqiangcgq.com'

gitlab_rails['smtp_enable'] = true
gitlab_rails['smtp_address'] = "smtp.126.com"
gitlab_rails['smtp_port'] = 25
gitlab_rails['smtp_user_name'] = "mq7253181@126.com"
gitlab_rails['smtp_password'] = "2455878"
gitlab_rails['smtp_authentication'] = "plain"

user['git_user_name'] = "Quincy's GitLab"
user['git_user_email'] = "mq7253181@126.com"

创建目录: 
mkdir -p /var/opt/gitlab/redis

nginx增加配置: 
location ^~ /assets/ {
                    root  /opt/gitlab/embedded/service/gitlab-rails/public;
                    index  index.html index.htm;
                }

加载: 
gitlab-ctl reconfigure

启动: 
gitlab-ctl start

重启: 
gitlab-ctl restart

打印日志: 
gitlab-ctl tail

初始化密码: 
进入命令行: gitlab-rails console -e production
u=User.all
u=User.where(id:1).first
u.password='mq62455878'
u.password_confirmation='mq62455878'
u.save!




