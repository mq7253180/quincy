groupadd mysql
useradd -r -m -d /usr/mysql -g mysql -s /bin/false mysql
passwd mysql
mkdir -p /logs/mysql
chown -R mysql:mysql /logs/mysql
安装libaio
	压缩包安装：rpm -ivh /quincy/mysql/libaio-0.3.109-13.el7.x86_64.rpm
	源码安装方式：
		First, disable the installation of the static library:
			sed -i '/install.*libaio.a/s/^/#/' src/Makefile
		make
		make install
		ln -sf /usr/lib/libaio.so.1.0.2 /usr/lib64/libaio.so
		ln -sf /usr/lib/libaio.so.1.0.2 /usr/lib64/libaio.so.1
解压

5.6.*版
将data目录剪切出来
删除support-files/my-default.cnf
将配置好的my.cnf复制替换support-files/my-default.cnf
./mysql/scripts/mysql_install_db --defaults-file=/quincy/mysql/my-master.cnf --user=mysql

5.7.*及以上版
./mysql/bin/mysqld --initialize --explicit_defaults_for_timestamp --basedir=/quincy/mysql/mysql --datadir=/quincy/mysql/data --user=mysql

CentOS 7
5.6.*版报
FATAL ERROR: please install the following Perl modules before executing ./scripts/mysql_install_db:
Data::Dumper
安装
yum -y install autoconf
或
yum -y install perl-Module-Install.noarch

报
Installing MySQL system tables..../bin/mysqld: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory
或
mysqld: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory
安装libaio：
rpm方式：http://mirror.centos.org/centos/7/os/x86_64/Packages/libaio-0.3.109-13.el7.x86_64.rpm
tar.gz方式：
	First, disable the installation of the static library: 
		sed -i '/install.*libaio.a/s/^/#/' src/Makefile
	make
	make install
	ln -sf /usr/lib/libaio.so.1.0.2 /usr/lib64/libaio.so
	ln -sf /usr/lib/libaio.so.1.0.2 /usr/lib64/libaio.so.1

启动
/quincy/mysql/mysql/bin/mysqld --defaults-file=/quincy/mysql/my-master.cnf --user=mysql
nohup /quincy/mysql/mysql/bin/mysqld --defaults-file=/quincy/mysql/my-master.cnf --user=mysql 2>&1 &

登录
/quincy/mysql/mysql/bin/mysql --socket=/logs/mysql/mysqld.socket -uroot -p

更改用用户: 
ALTER USER 'root'@'localhost' IDENTIFIED BY 'oneapimmysql';
ALTER USER SET user.host='%' WHERE user.user='root';
ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'oneapimmysql';

8版客户端登录报: ERROR 2059(HY000): Authentication plugin 'caching_sha2_password' cannot be loaded: 
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'oneapimmysql';

给haproxy建立健康检查无密码无权限用户
CREATE USER 'haproxy'@'localhost';

创建、授权用户:
5以下版本: 
GRANT ALL PRIVILEGES ON *.* TO 'jlcedu'@'localhost' IDENTIFIED BY 'xxx' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'jlcedu'@'localhost' IDENTIFIED BY 'xxx' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'jlcedu'@'127.0.0.1' IDENTIFIED BY 'xxx' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '1qazxsw2' WITH GRANT OPTION;
GRANT SELECT ON jlcedu.* TO 'jlcedu'@'%' IDENTIFIED BY 'xxx' WITH GRANT OPTION;

8以上版本: 
CREATE USER 'admin'@'%' IDENTIFIED BY 'nimda';
CREATE USER 'finder'@'%' IDENTIFIED BY 'rednif';
CREATE USER 'maqiang'@'%' IDENTIFIED BY '1qazxsw23edc';
CREATE USER 'maqiang'@'localhost' IDENTIFIED BY '1qazxsw23edc';
GRANT ALL PRIVILEGES ON test.* TO 'admin'@'localhost' IDENTIFIED BY 'nimda' WITH GRANT OPTION;
GRANT SELECT ON test.* TO 'admin'@'%' IDENTIFIED BY 'nimda' WITH GRANT OPTION;
REVOKE ALL PRIVILEGES ON test.* FROM 'admin'@'localhost';
GRANT ALL PRIVILEGES ON ducati.* TO 'making'@'localhost' IDENTIFIED BY '1qazxsw23edc' WITH GRANT OPTION;

8.4版
带IDENTIFIED BY报：ERROR 1064 (42000): You have an error in your SQL syntax

CREATE DATABASE ducati CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda0 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda1 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda2 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda3 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda4 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda5 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda6 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE DATABASE honda7 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

GRANT ALL PRIVILEGES ON ducati.* TO 'maqiang'@'localhost' WITH GRANT OPTION;
GRANT SELECT ON ducati.* TO 'maqiang'@'%';
GRANT ALL PRIVILEGES ON ducati.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda0.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda1.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda2.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda3.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda4.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda5.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda6.* TO 'admin'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON honda7.* TO 'admin'@'%' WITH GRANT OPTION;

GRANT SELECT ON ducati.* TO 'finder'@'%';
GRANT SELECT ON honda.* TO 'finder'@'%';
GRANT SELECT ON honda0.* TO 'finder'@'%';
GRANT SELECT ON honda1.* TO 'finder'@'%';
GRANT SELECT ON honda2.* TO 'finder'@'%';
GRANT SELECT ON honda3.* TO 'finder'@'%';
GRANT SELECT ON honda4.* TO 'finder'@'%';
GRANT SELECT ON honda5.* TO 'finder'@'%';
GRANT SELECT ON honda6.* TO 'finder'@'%';
GRANT SELECT ON honda7.* TO 'finder'@'%';

FLUSH PRIVILEGES;

关闭
/quincy/mysql/mysql/bin/mysqladmin shutdown --socket=/mysql/mysqld.socket (-uroot -p1qazxsw2)

创建软链接
ln -sf /servers/mysql/mysql-master/bin/mysql /usr/local/bin/mysql

复制启动脚本到初始化目录
cp support-files/mysql.server /etc/init.d/mysql

修改root密码
./bin/mysqladmin -u root password '密码'

ps -ef|grep mysql|grep -v grep

/quincy/mysql/mysql/bin/mysqladmin --socket=/quincy/mysql/mysqld.socket shutdown
=====================================Windows安装=====================================================
由于找不到VCRUNTIME140_1.dll: 下载一个vcruntime140_1.dll放到C:\Windows\System32目录下

E:\mysql\mysql-master\mysql\bin\mysqld --initialize-insecure --explicit_defaults_for_timestamp --console --datadir=E:\mysql\mysql-master\data(5.7之后版需要，因为没有data目录)

-insecure: 在初始化时如果加上，则会创建空密码的root@localhost账号，否则会创建带密码的root@localhost账号，密码直接写在log-error日志文件中(在5.6版本中是放在~/.mysql_secret文件里，更加隐蔽，不熟悉的话可能会无所适从)
--console: 显示控制台日志，不加-insecure时可以显示初始root密码
--lc-messages-dir=
--lc-messages=en_US
--bootstrap

net start mysql
net stop mysql
sc delete mysql

5.6之前版需要创建localhost的用户

主库
E:\mysql\mysql-master\mysql\bin\mysqld --install mysqlmaster --defaults-file="E:\mysql\my-master.ini"

E:\mysql\mysql-master\mysql\bin\mysql -uroot

grant all privileges on *.* to 'root'@'localhost' identified by 'xxx' with grant option;
grant all privileges on *.* to 'root'@'127.0.0.1' identified by 'xxx' with grant option;
grant all privileges on jlcedu.* to 'jlcedu'@'localhost' identified by 'xxx' with grant option;
grant all privileges on jlcedu.* to 'jlcedu'@'127.0.0.1' identified by 'xxx' with grant option;
flush privileges;

从库
E:\mysql\mysql-master\mysql\bin\mysqld --install mysqlslave --defaults-file="E:\mysql\my-slave.ini"

E:\mysql\mysql-master\mysql\bin\mysql -uroot -P3308
E:\mysql\mysql-master\mysql\bin\mysql -ujlcedu -pxxx -P3308

grant select on jlcedu.* to 'jlcedu'@'localhost' identified by 'xxx' with grant option;
grant select on jlcedu.* to 'jlcedu'@'127.0.0.1' identified by 'xxx' with grant option;
flush privileges;
=====================================================================================
显示用户: SELECT DISTINCT CONCAT('User: ''',user,'''@''',host,''';') AS query FROM mysql.user;
显示用户权限: show grants for 'nemo'@'%';
删除用户: drop user 'nemo'@'%'
修改密码: SET PASSWORD FOR 'root'@'localhost' = PASSWORD('xxx');

显示可用的存储引擎: show engines;
显示当前存储引擎; show variables like 'default_storage_engine';

查看进程: 
show processlist;
SELECT * FROM INFORMATION_SCHEMA.PROCESSLIST WHERE USER = 'user123' AND TIME > 300;

dump数据库: 
D:\env\mysql\mysql-5.7.22-winx64\bin\mysqldump -h10.50.1.14 -P3306 -upgw –p78DdlqVhCse pgw -R -E --triggers>D:\online\core.sql
/data/mysql/bin/mysqldump -h10.5.37.226 -P3306 -uroot -pYjbAky@2022 --flush-logs --lock-all-tables yjglb_model_city -R -E --triggers > /data/mysql-related/sb.sql
/quincy/mysql/mysql/bin/mysqldump -hlocalhost -P3306 -uroot -poneapimmysql ducati -R -E --triggers --socket=/logs/mysql/mysqld.socket>/quincy/mysql/ducati.sql
所有库：-A
单张表：test1
多张表：--databases test1 test2
–lock-all-tables, -x：锁定所有库中所有的表，这是通过在整个dump的过程中持有全局读锁来实现的，自动关闭-single-transaction和-lock-tables选项

导入：
/quincy/mysql/mysql/bin/mysql --socket=/logs/mysql/mysqld.socket -uadmin -pnimda ducati < /quincy/mysql/ducati.sql
/data/mysql/bin/mysql --socket=/data/mysql-related/mysqld.socket -uroot -pYh?8JHguIS6R yjglb_model_city < /data/mysql-related/sb.sql

创建数据库：
CREATE DATABASE IF NOT EXISTS yjglb_model_city DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

查询一张表的下一个自增值
SELECT AUTO_INCREMENT FROM information_schema.TABLES WHERE table_schema='ducati' AND table_name='zelation';
------------------------------------binlog---------------------------------------
查看是否开启binlog: 
show variables like '%log_bin%';

查看所有binglog文件名: 
show binary logs;

查看当前binlog文件是哪个: 
show master status;

查看binlog事件：show binlog events in 'binlog.000001';

mysql> show binlog events in 'binlog.000005';
+---------------+-----+----------------+-----------+-------------+--------------------------------------+
| Log_name      | Pos | Event_type     | Server_id | End_log_pos | Info                                 |
+---------------+-----+----------------+-----------+-------------+--------------------------------------+
| binlog.000005 |   4 | Format_desc    |         1 |         125 | Server ver: 8.0.26, Binlog ver: 4    |
| binlog.000005 | 125 | Previous_gtids |         1 |         156 |                                      |
| binlog.000005 | 156 | Anonymous_Gtid |         1 |         235 | SET @@SESSION.GTID_NEXT= 'ANONYMOUS' |
| binlog.000005 | 235 | Query          |         1 |         317 | BEGIN                                |
| binlog.000005 | 317 | Query          |         1 |         414 | use `test`; DELETE FROM b_region     |
| binlog.000005 | 414 | Xid            |         1 |         445 | COMMIT /* xid=66 */                  |
+---------------+-----+----------------+-----------+-------------+--------------------------------------+
6 rows in set (0.01 sec)
---------------------索引--------------------------
DROP INDEX mobile_phone ON t_b_user;
DROP INDEX email ON t_b_user;

ALTER TABLE t_b_order ADD CONSTRAINT unq_order_no UNIQUE (`order_no`);
ALTER TABLE t_b_suborder_head ADD CONSTRAINT unq_suborder_no UNIQUE (`suborder_no`);

CREATE INDEX idx_order_no ON t_b_suborder_head(`order_no`) USING BTREE;
CREATE INDEX idx_suborder_no ON t_b_suborder_head(`suborder_no`) USING BTREE;
CREATE INDEX idx_suborder_no ON t_b_suborder_detail(`suborder_no`) USING BTREE;
---------------------主从----------------------------------------------
导数据
报：
mysqldump: Couldn't execute 'FLUSH TABLES': Access denied; you need (at least one of) the RELOAD privilege(s) for this operation (1227)
GRANT RELOAD ON *.* TO 'root'@'%';
报：
mysqldump: Error: 'Access denied; you need (at least one of) the PROCESS privilege(s) for this operation' when trying to dump tablespaces
GRANT PROCESS ON *.* TO 'root'@'%';

主库
show variables like '%log_bin%';
show master status;
show processlist\G;

从库
change master to master_host='localhost',master_port=3306,master_user='root',master_password='xxx',master_log_file='master.000001',master_log_pos=786;
show slave status\G
start slave;
show slave status\G

将坏掉的主库修复为新的备库步骤：
1. 导出：/space/supdata/mysql/bin/mysqldump -h10.5.37.88 -P3306 -uroot -pYjbAky@2022 --flush-logs --lock-all-tables --databases yjglb_model_city yjglb_technology_track -R -E --triggers > /space/supdata/xxx.sql
2. 登录88的数据库执行show master status;或查看index文件查看当前binlog文件名称
3. 导入：/space/supdata/mysql/bin/mysql -h127.0.0.1 -P3306 -uroot -pYjbAky@2022 < /space/supdata/xxx.sql
4. 设置为新的从库：
 change master to master_host='10.5.37.88',master_port=3306,master_user='root',master_password='YjbAky@2022',master_log_file='第2步中查到的文件名称',master_log_pos=154;
 start slave;
 show slave status\G
5 作为备启动keepalived：nohup /space/keepalived/sbin/keepalived -f /space/kald-backup.conf 2>&1 &
======================================================================
BTREE索引

RU和RC隔离级别：无论条件字段加不加索引，无论等值还是范围，均只锁行
RR隔离级别：
	条件不加索引：锁表，连INSERT都不可以
	条件加索引：间隙锁
		UPDATE/DELETE：
			条件是BETWEEN：区间开闭规则INSERT和UPDATE/DELETE是相反的
				INSERT：[)左闭右开，大范围左端点不可以，右端点可以；
				UPDATE/DELETE：(]左开右闭，大范围左端点可以，右端点不可以
			条件是=：
				INSERT：开闭规则同上
					条件值存在：锁当自己当前和前一个区间；
					条件值不存在：只锁自己当前区间
				UPDATE/DELETE：无间隙锁，其他事务均可以在相临区间UPDATE、DELETE
		INSERT：无间隙锁，其他事务均可以在相临区间UPDATE、DELETE、INSERT

1000万条记录，8c32g
一、没加条件
	1. COUNT(*)，3~5秒
	2. COUNT(索引字段)，5~7秒
二、索引列上加了个能返回15万条记录的右LIKE条件
	1. COUNT(*)不到0.2秒
	2. COUNT(索引字段)耗时与COUNT(*)相当
	3. 查非索引字段时间不可想象
	4. 查索引字段0.5~0.8秒
三、索引列上加=条件
	1. 查*，100大几十毫秒
	2. 查索引字段，100小几十毫秒，有时不到100
----------------------------------------------------------------------
唯一性索引

RU和RC隔离级别：无论INSERT还是UPDATE，均锁唯一性字段的值
RR隔离级别：
	INSERT：锁唯一性字段的值和所有记录，INSERT如果唯一性字段值不冲突可以成功，如果冲突或UPDATE相不相干的记录均被卡住
	UPDATE：锁表
========================================================================
EXPLAIN

多对多：

情况一：关系表数据量足够多
数据量最少的
关系表
数据量最多的
1. 查询字段包含数据量最少的表，没加该表索引字段条件或条件范围过大会ALL
2. 加了数据量最多的表索引字段条件=或范围较小的条件时，该表会提升至首位查询

情况二：关系表数据量足够少
关系表
数据量少的
数据量多的
1. 加索引字段条件会将该表提至首位，查询字段包含该表非索引字段，如果范围过大会ALL
2. 加了数据量多的表索引字段条件=或范围较小的条件时，该表会提升至首位查询
-------------------------------------------------
一对多：

无论主子表谁数据量多，都先查子表，后查主表

子表
主表

1. 查询字段包含子表非索引字段，没加子表索引字段条件或条件范围过大会ALL
2. 加了主表索引字段条件=或范围较小的条件时，主表会提升至首位查询

